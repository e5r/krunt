{"name":"Krunt","tagline":"Grunt.js for the new technology Microsoft NET vNext","body":"Não chega a ser um port do Grunt.js para a nova tecnologia Microsoft .NET vNext. Eu quero na verdade aproveitar os ótimos conceitos que o Grunt.js nos permite aplicar no fluxo de desenvolvimento (principalmente front-end), e aplicá-los também para definir um fluxo semelhante para o desenvolvimento web na nova tecnologia que a Microsoft está lançando, o ASP.NET vNext.\r\n\r\nA ideia inicial é implementar as tarefas mais básicas para o desenvolvimento front-end, principalmente de bibliotecas JavaScript:\r\n\r\n* Concatenar\r\n* Minificar\r\n* Assistir (Watch)\r\n* Empacotar\r\n\r\nO Grunt.js se baseia em um arquivo _Gruntfile.js_ que além de conter as configurações.\r\nEx:\r\n\r\n```javascript\r\ngrunt.initConfig({\r\n  pkg: grunt.file.readJSON('package.json'),\r\n  uglify: {\r\n    options: {\r\n      banner: '/*! <%= pkg.name %> My Project */\\n'\r\n    },\r\n    build: {\r\n      src: 'src/<%= pkg.name %>.js',\r\n      dest: 'build/<%= pkg.name %>.min.js'\r\n    }\r\n  }\r\n});\r\n```\r\n\r\nTambém executa código:\r\n\r\n```javascript\r\ngrunt.loadNpmTasks('grunt-contrib-uglify');\r\n\r\ngrunt.registerTask('default', ['uglify']);\r\n```\r\n\r\nCom o __Krunt__ pretendo fazer um pouco diferente, mantendo a configuração em um arquivo de configuração chamado _Krunt.json_. Nesse caso o registro de tarefas e (talvez) o carregamento de submódulos seja feito também via arquivo de configuração.\r\n\r\nAs tarefas (aqui leia-se plugin) por sua vez podem ser extendidas, ou seja, poderão ser criadas novas tarefas.\r\n\r\nConclusão\r\n=========\r\n\r\nPor enquanto é só uma ideia, mas de acordo com que a implementação for sendo feita, a documentação será atualizada.\r\n\r\nMas basicamente você poderá criar seu projeto:\r\n\r\n#### project.json\r\n```json\r\n{\r\n    \"version\": \"1.0.0-*\",\r\n    \"dependencies\": {\r\n        \"E5R.Krunt\": \"1.0.0-*\",\r\n    },\r\n    \"commands\": {\r\n        \"krunt\": \"E5R.Krunt\"\r\n    }\r\n}\r\n```\r\n\r\n#### krunt.json\r\n```json\r\n{\r\n  \"plugins\": [\"krunt-uglify\"],\r\n  \"defaultTask\": [\"uglify\"],\r\n  \"tasks\": {\r\n    \"uglify\": {\r\n      \"options\": {\r\n        \"banner\": \"/*! My Project <%= project.version %> */\\n\"\r\n      },\r\n      \"build\": {\r\n        \"src\": \"src/<%= project.name %>.js\",\r\n        \"dest\": \"build/<%= project.name %>.min.js\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nE na linha de comando você pode executar uma tarefa específica (ex: `uglify`):\r\n\r\n```\r\nk krunt uglify\r\n```\r\n\r\nOu executar a tarefa padrão `defaultTask` => `uglify`:\r\n```\r\nk krunt\r\n```\r\n\r\nUma opção também será fazer um _híbrido_, onde o `project.json` possa também ser usado como arquivo __Krunt__.\r\nEx:\r\n\r\n#### project.json\r\n```json\r\n{\r\n    \"version\": \"1.0.0-*\",\r\n    \"dependencies\": {\r\n        \"E5R.Krunt\": \"1.0.0-*\",\r\n    },\r\n    \"commands\": {\r\n        \"krunt\": \"E5R.Krunt\"\r\n    },\r\n    \"krunt\": {\r\n      \"plugins\": [\"krunt-uglify\"],\r\n      \"defaultTask\": [\"uglify\"],\r\n      \"tasks\": {\r\n        \"uglify\": {\r\n          \"options\": {\r\n            \"banner\": \"/*! My Project <%= project.version %> */\\n\"\r\n          },\r\n          \"build\": {\r\n            \"src\": \"src/<%= project.name %>.js\",\r\n            \"dest\": \"build/<%= project.name %>.min.js\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}